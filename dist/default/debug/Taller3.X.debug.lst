

Microchip Technology PIC LITE Macro Assembler V1.43 build -156212558 
                                                                                               Fri Oct 20 17:02:04 2017

Microchip Technology Omniscient Code Generator v1.43 (Free mode) build 201707250354
     1                           	processor	12F675
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	dabs	1,0x5E,2
    12  0000                     
    13                           ; Version 1.43
    14                           ; Generated 25/07/2017 GMT
    15                           ; 
    16                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution.
    30                           ; 
    31                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    32                           ;        software without specific prior written permission.
    33                           ; 
    34                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    35                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    36                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    37                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    38                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    39                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    40                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    41                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    42                           ; 
    43                           ; 
    44                           ; Code-generator required, PIC12F675 Definitions
    45                           ; 
    46                           ; SFR Addresses
    47  0000                     
    48                           	psect	cinit
    49  03F8                     start_initialization:	
    50                           ; #config settings
    51                           
    52  03F8                     __initialization:	
    53                           
    54                           ; Clear objects allocated to BANK0
    55  03F8  1283               	bcf	3,5	;RP0=0, select bank0
    56  03F9  01BE               	clrf	__pbssBANK0& (0+127)
    57  03FA  01BF               	clrf	(__pbssBANK0+1)& (0+127)
    58  03FB  01C0               	clrf	(__pbssBANK0+2)& (0+127)
    59  03FC  01C1               	clrf	(__pbssBANK0+3)& (0+127)
    60  03FD                     end_of_initialization:	
    61                           ;End of C runtime variable initialization code
    62                           
    63  03FD                     __end_of__initialization:	
    64  03FD  0183               	clrf	3
    65  03FE  2B1D               	ljmp	_main	;jump to C main() function
    66                           
    67                           	psect	bssBANK0
    68  003E                     __pbssBANK0:	
    69  003E                     probarDivision@F17:	
    70  003E                     	ds	4
    71                           
    72                           	psect	cstackCOMMON
    73  0000                     __pcstackCOMMON:	
    74  0000                     ??_divisionEntera:	
    75  0000                     ??_main:	
    76                           ; 1 bytes @ 0x0
    77                           
    78                           
    79                           	psect	cstackBANK0
    80  0020                     __pcstackBANK0:	
    81                           ; 1 bytes @ 0x0
    82                           
    83  0020                     ?_divisionEntera:	
    84  0020                     ?_main:	
    85                           ; 1 bytes @ 0x0
    86                           
    87  0020                     divisionEntera@dividendo1:	
    88                           ; 2 bytes @ 0x0
    89                           
    90                           
    91                           ; 2 bytes @ 0x0
    92  0020                     	ds	2
    93  0022                     divisionEntera@divisor1:	
    94                           
    95                           ; 2 bytes @ 0x2
    96  0022                     	ds	2
    97  0024                     divisionEntera@resultado:	
    98                           
    99                           ; 1 bytes @ 0x4
   100  0024                     	ds	1
   101  0025                     divisionEntera@temp2:	
   102                           
   103                           ; 2 bytes @ 0x5
   104  0025                     	ds	2
   105  0027                     divisionEntera@resultadoParteEntera:	
   106                           
   107                           ; 2 bytes @ 0x7
   108  0027                     	ds	2
   109  0029                     divisionEntera@resultadoFraccion:	
   110                           
   111                           ; 2 bytes @ 0x9
   112  0029                     	ds	2
   113  002B                     divisionEntera@count:	
   114                           
   115                           ; 2 bytes @ 0xB
   116  002B                     	ds	2
   117  002D                     divisionEntera@divisor:	
   118                           
   119                           ; 2 bytes @ 0xD
   120  002D                     	ds	2
   121  002F                     divisionEntera@temp:	
   122                           
   123                           ; 2 bytes @ 0xF
   124  002F                     	ds	2
   125  0031                     divisionEntera@denominador:	
   126                           
   127                           ; 2 bytes @ 0x11
   128  0031                     	ds	2
   129  0033                     divisionEntera@dividendo:	
   130                           
   131                           ; 2 bytes @ 0x13
   132  0033                     	ds	2
   133  0035                     ?_probarDivision:	
   134  0035                     probarDivision@operando1:	
   135                           ; 1 bytes @ 0x15
   136                           
   137                           
   138                           ; 2 bytes @ 0x15
   139  0035                     	ds	2
   140  0037                     probarDivision@operando2:	
   141                           
   142                           ; 2 bytes @ 0x17
   143  0037                     	ds	2
   144  0039                     ??_probarDivision:	
   145                           
   146                           ; 1 bytes @ 0x19
   147  0039                     	ds	1
   148  003A                     probarDivision@resultado:	
   149                           
   150                           ; 4 bytes @ 0x1A
   151  003A                     	ds	4
   152                           
   153                           	psect	maintext
   154  031D                     __pmaintext:	
   155 ;;
   156 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   157 ;;
   158 ;; *************** function _main *****************
   159 ;; Defined at:
   160 ;;		line 49 in file "main.c"
   161 ;; Parameters:    Size  Location     Type
   162 ;;		None
   163 ;; Auto vars:     Size  Location     Type
   164 ;;		None
   165 ;; Return value:  Size  Location     Type
   166 ;;                  2   26[None  ] int 
   167 ;; Registers used:
   168 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   169 ;; Tracked objects:
   170 ;;		On entry : B00/0
   171 ;;		On exit  : 0/0
   172 ;;		Unchanged: 0/0
   173 ;; Data sizes:     COMMON   BANK0
   174 ;;      Params:         0       0
   175 ;;      Locals:         0       0
   176 ;;      Temps:          0       0
   177 ;;      Totals:         0       0
   178 ;;Total ram usage:        0 bytes
   179 ;; Hardware stack levels required when called:    2
   180 ;; This function calls:
   181 ;;		_probarDivision
   182 ;; This function is called by:
   183 ;;		Startup code after reset
   184 ;; This function uses a non-reentrant model
   185 ;;
   186                           
   187                           
   188                           ;psect for function _main
   189  031D                     _main:	
   190                           
   191                           ;main.c: 51: probarDivision(43, 4);
   192                           
   193                           ;incstack = 0
   194                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   195  031D  302B               	movlw	43
   196  031E  1283               	bcf	3,5	;RP0=0, select bank0
   197  031F  00B5               	movwf	probarDivision@operando1
   198  0320  3000               	movlw	0
   199  0321  00B6               	movwf	probarDivision@operando1+1
   200  0322  3004               	movlw	4
   201  0323  00B7               	movwf	probarDivision@operando2
   202  0324  3000               	movlw	0
   203  0325  00B8               	movwf	probarDivision@operando2+1
   204  0326  2328               	fcall	_probarDivision
   205  0327  2800               	ljmp	start
   206  0328                     __end_of_main:	
   207                           
   208                           	psect	text1
   209  0328                     __ptext1:	
   210 ;; *************** function _probarDivision *****************
   211 ;; Defined at:
   212 ;;		line 44 in file "main.c"
   213 ;; Parameters:    Size  Location     Type
   214 ;;  operando1       2   21[BANK0 ] unsigned int 
   215 ;;  operando2       2   23[BANK0 ] unsigned int 
   216 ;; Auto vars:     Size  Location     Type
   217 ;;  resultado       4   26[BANK0 ] unsigned int [2]
   218 ;; Return value:  Size  Location     Type
   219 ;;                  1    wreg      void 
   220 ;; Registers used:
   221 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   222 ;; Tracked objects:
   223 ;;		On entry : 0/0
   224 ;;		On exit  : 0/0
   225 ;;		Unchanged: 0/0
   226 ;; Data sizes:     COMMON   BANK0
   227 ;;      Params:         0       4
   228 ;;      Locals:         0       4
   229 ;;      Temps:          0       1
   230 ;;      Totals:         0       9
   231 ;;Total ram usage:        9 bytes
   232 ;; Hardware stack levels used:    1
   233 ;; Hardware stack levels required when called:    1
   234 ;; This function calls:
   235 ;;		_divisionEntera
   236 ;; This function is called by:
   237 ;;		_main
   238 ;; This function uses a non-reentrant model
   239 ;;
   240                           
   241                           
   242                           ;psect for function _probarDivision
   243  0328                     _probarDivision:	
   244                           
   245                           ;main.c: 45: unsigned int resultado[2] = { 0, 0 };
   246                           
   247                           ;incstack = 0
   248                           ; Regs used in _probarDivision: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   249  0328  1283               	bcf	3,5	;RP0=0, select bank0
   250  0329  0841               	movf	probarDivision@F17+3,w
   251  032A  00BD               	movwf	probarDivision@resultado+3
   252  032B  0840               	movf	probarDivision@F17+2,w
   253  032C  00BC               	movwf	probarDivision@resultado+2
   254  032D  083F               	movf	probarDivision@F17+1,w
   255  032E  00BB               	movwf	probarDivision@resultado+1
   256  032F  083E               	movf	probarDivision@F17,w
   257  0330  00BA               	movwf	probarDivision@resultado
   258                           
   259                           ;main.c: 46: divisionEntera(operando1, operando2, &resultado);
   260  0331  0836               	movf	probarDivision@operando1+1,w
   261  0332  00A1               	movwf	divisionEntera@dividendo1+1
   262  0333  0835               	movf	probarDivision@operando1,w
   263  0334  00A0               	movwf	divisionEntera@dividendo1
   264  0335  0838               	movf	probarDivision@operando2+1,w
   265  0336  00A3               	movwf	divisionEntera@divisor1+1
   266  0337  0837               	movf	probarDivision@operando2,w
   267  0338  00A2               	movwf	divisionEntera@divisor1
   268  0339  303A               	movlw	(low (probarDivision@resultado| 0))& (0+255)
   269  033A  00B9               	movwf	??_probarDivision
   270  033B  0839               	movf	??_probarDivision,w
   271  033C  00A4               	movwf	divisionEntera@resultado
   272  033D  233F               	fcall	_divisionEntera
   273  033E  0008               	return
   274  033F                     __end_of_probarDivision:	
   275                           
   276                           	psect	text2
   277  033F                     __ptext2:	
   278 ;; *************** function _divisionEntera *****************
   279 ;; Defined at:
   280 ;;		line 1 in file "main.c"
   281 ;; Parameters:    Size  Location     Type
   282 ;;  dividendo1      2    0[BANK0 ] unsigned int 
   283 ;;  divisor1        2    2[BANK0 ] unsigned int 
   284 ;;  resultado       1    4[BANK0 ] PTR PTR unsigned int 
   285 ;;		 -> probarDivision@resultado(4), 
   286 ;; Auto vars:     Size  Location     Type
   287 ;;  count           2   11[BANK0 ] int 
   288 ;;  dividendo       2   19[BANK0 ] unsigned int 
   289 ;;  denominador     2   17[BANK0 ] unsigned int 
   290 ;;  temp            2   15[BANK0 ] unsigned int 
   291 ;;  divisor         2   13[BANK0 ] unsigned int 
   292 ;;  resultadoFra    2    9[BANK0 ] unsigned int 
   293 ;;  resultadoPar    2    7[BANK0 ] unsigned int 
   294 ;;  temp2           2    5[BANK0 ] unsigned int 
   295 ;; Return value:  Size  Location     Type
   296 ;;                  1    wreg      void 
   297 ;; Registers used:
   298 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
   299 ;; Tracked objects:
   300 ;;		On entry : 0/0
   301 ;;		On exit  : 0/0
   302 ;;		Unchanged: 0/0
   303 ;; Data sizes:     COMMON   BANK0
   304 ;;      Params:         0       5
   305 ;;      Locals:         0      16
   306 ;;      Temps:          0       0
   307 ;;      Totals:         0      21
   308 ;;Total ram usage:       21 bytes
   309 ;; Hardware stack levels used:    1
   310 ;; This function calls:
   311 ;;		Nothing
   312 ;; This function is called by:
   313 ;;		_probarDivision
   314 ;; This function uses a non-reentrant model
   315 ;;
   316                           
   317                           
   318                           ;psect for function _divisionEntera
   319  033F                     _divisionEntera:	
   320                           
   321                           ;main.c: 2: unsigned int denominador = divisor1;
   322                           
   323                           ;incstack = 0
   324                           ; Regs used in _divisionEntera: [wreg-fsr0h+status,2+status,0+btemp+1]
   325  033F  1283               	bcf	3,5	;RP0=0, select bank0
   326  0340  0823               	movf	divisionEntera@divisor1+1,w
   327  0341  00B2               	movwf	divisionEntera@denominador+1
   328  0342  0822               	movf	divisionEntera@divisor1,w
   329  0343  00B1               	movwf	divisionEntera@denominador
   330                           
   331                           ;main.c: 3: unsigned int temp = 1;
   332  0344  3001               	movlw	1
   333  0345  00AF               	movwf	divisionEntera@temp
   334  0346  3000               	movlw	0
   335  0347  00B0               	movwf	divisionEntera@temp+1
   336                           
   337                           ;main.c: 4: unsigned int temp2 = 0x80000000;
   338  0348  01A5               	clrf	divisionEntera@temp2
   339  0349  01A6               	clrf	divisionEntera@temp2+1
   340                           
   341                           ;main.c: 5: unsigned int resultadoParteEntera = 0;
   342  034A  01A7               	clrf	divisionEntera@resultadoParteEntera
   343  034B  01A8               	clrf	divisionEntera@resultadoParteEntera+1
   344                           
   345                           ;main.c: 6: unsigned int resultadoFraccion = 0;
   346  034C  01A9               	clrf	divisionEntera@resultadoFraccion
   347  034D  01AA               	clrf	divisionEntera@resultadoFraccion+1
   348                           
   349                           ;main.c: 7: unsigned int dividendo = dividendo1;
   350  034E  0821               	movf	divisionEntera@dividendo1+1,w
   351  034F  00B4               	movwf	divisionEntera@dividendo+1
   352  0350  0820               	movf	divisionEntera@dividendo1,w
   353  0351  00B3               	movwf	divisionEntera@dividendo
   354                           
   355                           ;main.c: 8: unsigned int divisor = divisor1;
   356  0352  0823               	movf	divisionEntera@divisor1+1,w
   357  0353  00AE               	movwf	divisionEntera@divisor+1
   358  0354  0822               	movf	divisionEntera@divisor1,w
   359  0355  00AD               	movwf	divisionEntera@divisor
   360  0356                     l3:	
   361                           ;main.c: 10: while (denominador <= dividendo) {
   362                           
   363  0356  0832               	movf	divisionEntera@denominador+1,w
   364  0357  0234               	subwf	divisionEntera@dividendo+1,w
   365  0358  1D03               	skipz
   366  0359  2B5C               	goto	u195
   367  035A  0831               	movf	divisionEntera@denominador,w
   368  035B  0233               	subwf	divisionEntera@dividendo,w
   369  035C                     u195:	
   370  035C  1C03               	btfss	3,0
   371  035D  2B6D               	goto	l581
   372                           
   373                           ;main.c: 11: denominador <<= 1;
   374  035E  3001               	movlw	1
   375  035F                     u175:	
   376  035F  1003               	clrc
   377  0360  0DB1               	rlf	divisionEntera@denominador,f
   378  0361  0DB2               	rlf	divisionEntera@denominador+1,f
   379  0362  3EFF               	addlw	-1
   380  0363  1D03               	skipz
   381  0364  2B5F               	goto	u175
   382                           
   383                           ;main.c: 12: temp <<= 1;
   384  0365  3001               	movlw	1
   385  0366                     u185:	
   386  0366  1003               	clrc
   387  0367  0DAF               	rlf	divisionEntera@temp,f
   388  0368  0DB0               	rlf	divisionEntera@temp+1,f
   389  0369  3EFF               	addlw	-1
   390  036A  1D03               	skipz
   391  036B  2B66               	goto	u185
   392  036C  2B56               	goto	l3
   393  036D                     l581:	
   394                           
   395                           ;main.c: 13: }
   396                           ;main.c: 15: denominador >>= 1;
   397  036D  3001               	movlw	1
   398  036E                     u205:	
   399  036E  1003               	clrc
   400  036F  0CB2               	rrf	divisionEntera@denominador+1,f
   401  0370  0CB1               	rrf	divisionEntera@denominador,f
   402  0371  3EFF               	addlw	-1
   403  0372  1D03               	skipz
   404  0373  2B6E               	goto	u205
   405                           
   406                           ;main.c: 16: temp >>= 1;
   407  0374  3001               	movlw	1
   408  0375                     u215:	
   409  0375  1003               	clrc
   410  0376  0CB0               	rrf	divisionEntera@temp+1,f
   411  0377  0CAF               	rrf	divisionEntera@temp,f
   412  0378  3EFF               	addlw	-1
   413  0379  1D03               	skipz
   414  037A  2B75               	goto	u215
   415  037B                     l591:	
   416                           ;main.c: 18: while (temp != 0) {
   417                           
   418  037B  082F               	movf	divisionEntera@temp,w
   419  037C  0430               	iorwf	divisionEntera@temp+1,w
   420  037D  1903               	btfsc	3,2
   421  037E  2BA0               	goto	l593
   422                           
   423                           ;main.c: 19: if (dividendo >= denominador) {
   424  037F  0832               	movf	divisionEntera@denominador+1,w
   425  0380  0234               	subwf	divisionEntera@dividendo+1,w
   426  0381  1D03               	skipz
   427  0382  2B85               	goto	u225
   428  0383  0831               	movf	divisionEntera@denominador,w
   429  0384  0233               	subwf	divisionEntera@dividendo,w
   430  0385                     u225:	
   431  0385  1C03               	skipc
   432  0386  2B91               	goto	l587
   433                           
   434                           ;main.c: 20: dividendo -= denominador;
   435  0387  0831               	movf	divisionEntera@denominador,w
   436  0388  02B3               	subwf	divisionEntera@dividendo,f
   437  0389  0832               	movf	divisionEntera@denominador+1,w
   438  038A  1C03               	skipc
   439  038B  03B4               	decf	divisionEntera@dividendo+1,f
   440  038C  02B4               	subwf	divisionEntera@dividendo+1,f
   441                           
   442                           ;main.c: 21: resultadoParteEntera |= temp;
   443  038D  082F               	movf	divisionEntera@temp,w
   444  038E  04A7               	iorwf	divisionEntera@resultadoParteEntera,f
   445  038F  0830               	movf	divisionEntera@temp+1,w
   446  0390  04A8               	iorwf	divisionEntera@resultadoParteEntera+1,f
   447  0391                     l587:	
   448                           
   449                           ;main.c: 22: }
   450                           ;main.c: 23: temp >>= 1;
   451  0391  3001               	movlw	1
   452  0392                     u235:	
   453  0392  1003               	clrc
   454  0393  0CB0               	rrf	divisionEntera@temp+1,f
   455  0394  0CAF               	rrf	divisionEntera@temp,f
   456  0395  3EFF               	addlw	-1
   457  0396  1D03               	skipz
   458  0397  2B92               	goto	u235
   459                           
   460                           ;main.c: 24: denominador >>= 1;
   461  0398  3001               	movlw	1
   462  0399                     u245:	
   463  0399  1003               	clrc
   464  039A  0CB2               	rrf	divisionEntera@denominador+1,f
   465  039B  0CB1               	rrf	divisionEntera@denominador,f
   466  039C  3EFF               	addlw	-1
   467  039D  1D03               	skipz
   468  039E  2B99               	goto	u245
   469  039F  2B7B               	goto	l591
   470  03A0                     l593:	
   471                           
   472                           ;main.c: 25: }
   473                           ;main.c: 27: if (dividendo > 0) {
   474  03A0  0833               	movf	divisionEntera@dividendo,w
   475  03A1  0434               	iorwf	divisionEntera@dividendo+1,w
   476  03A2  1903               	btfsc	3,2
   477  03A3  2BE6               	goto	l611
   478                           
   479                           ;main.c: 28: dividendo <<= 1;
   480  03A4  3001               	movlw	1
   481  03A5                     u275:	
   482  03A5  1003               	clrc
   483  03A6  0DB3               	rlf	divisionEntera@dividendo,f
   484  03A7  0DB4               	rlf	divisionEntera@dividendo+1,f
   485  03A8  3EFF               	addlw	-1
   486  03A9  1D03               	skipz
   487  03AA  2BA5               	goto	u275
   488                           
   489                           ;main.c: 29: int count = 23;
   490  03AB  3017               	movlw	23
   491  03AC  00AB               	movwf	divisionEntera@count
   492  03AD  3000               	movlw	0
   493  03AE  00AC               	movwf	divisionEntera@count+1
   494                           
   495                           ;main.c: 30: while (dividendo > 0 && count > 0) {
   496  03AF  2BD7               	goto	l607
   497  03B0                     l597:	
   498                           
   499                           ;main.c: 31: if (dividendo >= divisor) {
   500  03B0  1283               	bcf	3,5	;RP0=0, select bank0
   501  03B1  082E               	movf	divisionEntera@divisor+1,w
   502  03B2  0234               	subwf	divisionEntera@dividendo+1,w
   503  03B3  1D03               	skipz
   504  03B4  2BB7               	goto	u285
   505  03B5  082D               	movf	divisionEntera@divisor,w
   506  03B6  0233               	subwf	divisionEntera@dividendo,w
   507  03B7                     u285:	
   508  03B7  1C03               	skipc
   509  03B8  2BC3               	goto	l601
   510                           
   511                           ;main.c: 32: dividendo -= divisor;
   512  03B9  082D               	movf	divisionEntera@divisor,w
   513  03BA  02B3               	subwf	divisionEntera@dividendo,f
   514  03BB  082E               	movf	divisionEntera@divisor+1,w
   515  03BC  1C03               	skipc
   516  03BD  03B4               	decf	divisionEntera@dividendo+1,f
   517  03BE  02B4               	subwf	divisionEntera@dividendo+1,f
   518                           
   519                           ;main.c: 33: resultadoFraccion |= temp2;
   520  03BF  0825               	movf	divisionEntera@temp2,w
   521  03C0  04A9               	iorwf	divisionEntera@resultadoFraccion,f
   522  03C1  0826               	movf	divisionEntera@temp2+1,w
   523  03C2  04AA               	iorwf	divisionEntera@resultadoFraccion+1,f
   524  03C3                     l601:	
   525                           
   526                           ;main.c: 34: }
   527                           ;main.c: 35: temp2 >>= 1;
   528  03C3  3001               	movlw	1
   529  03C4                     u295:	
   530  03C4  1003               	clrc
   531  03C5  0CA6               	rrf	divisionEntera@temp2+1,f
   532  03C6  0CA5               	rrf	divisionEntera@temp2,f
   533  03C7  3EFF               	addlw	-1
   534  03C8  1D03               	skipz
   535  03C9  2BC4               	goto	u295
   536                           
   537                           ;main.c: 36: dividendo <<= 1;
   538  03CA  3001               	movlw	1
   539  03CB                     u305:	
   540  03CB  1003               	clrc
   541  03CC  0DB3               	rlf	divisionEntera@dividendo,f
   542  03CD  0DB4               	rlf	divisionEntera@dividendo+1,f
   543  03CE  3EFF               	addlw	-1
   544  03CF  1D03               	skipz
   545  03D0  2BCB               	goto	u305
   546                           
   547                           ;main.c: 37: count--;
   548  03D1  30FF               	movlw	255
   549  03D2  07AB               	addwf	divisionEntera@count,f
   550  03D3  1803               	skipnc
   551  03D4  0AAC               	incf	divisionEntera@count+1,f
   552  03D5  30FF               	movlw	255
   553  03D6  07AC               	addwf	divisionEntera@count+1,f
   554  03D7                     l607:	
   555  03D7  0833               	movf	divisionEntera@dividendo,w
   556  03D8  0434               	iorwf	divisionEntera@dividendo+1,w
   557  03D9  1903               	btfsc	3,2
   558  03DA  2BE6               	goto	l611
   559  03DB  082C               	movf	divisionEntera@count+1,w
   560  03DC  3A80               	xorlw	128
   561  03DD  00DF               	movwf	95
   562  03DE  3080               	movlw	128
   563  03DF  025F               	subwf	95,w
   564  03E0  1D03               	skipz
   565  03E1  2BE4               	goto	u325
   566  03E2  3001               	movlw	1
   567  03E3  022B               	subwf	divisionEntera@count,w
   568  03E4                     u325:	
   569  03E4  1803               	skipnc
   570  03E5  2BB0               	goto	l597
   571  03E6                     l611:	
   572                           
   573                           ;main.c: 38: }
   574                           ;main.c: 39: }
   575                           ;main.c: 40: resultado[0] = resultadoParteEntera;
   576  03E6  1283               	bcf	3,5	;RP0=0, select bank0
   577  03E7  0824               	movf	divisionEntera@resultado,w
   578  03E8  0084               	movwf	4
   579  03E9  0827               	movf	divisionEntera@resultadoParteEntera,w
   580  03EA  1383               	bcf	3,7	;select IRP bank0
   581  03EB  0080               	movwf	0
   582  03EC  0A84               	incf	4,f
   583  03ED  0828               	movf	divisionEntera@resultadoParteEntera+1,w
   584  03EE  0080               	movwf	0
   585                           
   586                           ;main.c: 41: resultado[1] = resultadoFraccion;
   587  03EF  0824               	movf	divisionEntera@resultado,w
   588  03F0  3E02               	addlw	2
   589  03F1  0084               	movwf	4
   590  03F2  0829               	movf	divisionEntera@resultadoFraccion,w
   591  03F3  0080               	movwf	0
   592  03F4  0A84               	incf	4,f
   593  03F5  082A               	movf	divisionEntera@resultadoFraccion+1,w
   594  03F6  0080               	movwf	0
   595  03F7  0008               	return
   596  03F8                     __end_of_divisionEntera:	
   597  005E                     btemp	set	94	;btemp
   598  005E                     wtemp0	set	94


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON            0      0       0
    BANK0            62     30      34

Pointer List with Targets:

    divisionEntera@resultado	PTR PTR unsigned int  size(1) Largest target is 4
		 -> probarDivision@resultado(BANK0[4]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_probarDivision
    _probarDivision->_divisionEntera

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     935
                     _probarDivision
 ---------------------------------------------------------------------------------
 (1) _probarDivision                                       9     5      4     935
                                             21 BANK0      9     5      4
                     _divisionEntera
 ---------------------------------------------------------------------------------
 (2) _divisionEntera                                      21    16      5     712
                                              0 BANK0     21    16      5
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _probarDivision
     _divisionEntera

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            0      0       0       0        0.0%
EEDATA              80      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BITBANK0            3E      0       0       3        0.0%
BANK0               3E     1E      22       4       54.8%
ABS                  0      0      22       5        0.0%
DATA                 0      0      22       6        0.0%


Microchip Technology PIC Macro Assembler V1.43 build -156212558 
Symbol Table                                                                                   Fri Oct 20 17:02:04 2017

                                 l3 0356                      _divisionEntera 033F  
                               l601 03C3                                 l611 03E6  
                               l607 03D7                                 l581 036D  
                               l591 037B                                 l593 03A0  
                               l587 0391                                 l597 03B0  
                               u205 036E                                 u215 0375  
                               u305 03CB                                 u225 0385  
                               u235 0392                                 u325 03E4  
                               u245 0399                                 u175 035F  
                               u185 0366                                 u275 03A5  
                               u195 035C                                 u285 03B7  
                               u295 03C4                                 fsr0 0004  
                               indf 0000                                _main 031D  
                              btemp 005E                                start 0000  
            __end_of_divisionEntera 03F8              divisionEntera@divisor1 0022  
                             ?_main 0020                    ??_probarDivision 0039  
           probarDivision@operando1 0035             probarDivision@operando2 0037  
           probarDivision@resultado 003A                               status 0003  
                             wtemp0 005E                     __initialization 03F8  
                      __end_of_main 0328                     ?_divisionEntera 0020  
         divisionEntera@denominador 0031             divisionEntera@dividendo 0033  
                            ??_main 0000                  divisionEntera@temp 002F  
           divisionEntera@resultado 0024             __end_of__initialization 03FD  
                    __pcstackCOMMON 0000            divisionEntera@dividendo1 0020  
                        __pbssBANK0 003E                          __pmaintext 031D  
   divisionEntera@resultadoFraccion 0029                 divisionEntera@count 002B  
               divisionEntera@temp2 0025                    ??_divisionEntera 0000  
                           __ptext1 0328                             __ptext2 033F  
              end_of_initialization 03FD             __size_of_probarDivision 0017  
             divisionEntera@divisor 002D                 start_initialization 03F8  
                         ___latbits 0000                       __pcstackBANK0 0020  
                 probarDivision@F17 003E                      _probarDivision 0328  
divisionEntera@resultadoParteEntera 0027              __end_of_probarDivision 033F  
           __size_of_divisionEntera 00B9                     ?_probarDivision 0035  
                     __size_of_main 000B  
