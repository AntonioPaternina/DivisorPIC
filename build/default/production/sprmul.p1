Version 3.2 HI-TECH Software Intermediate Code
"23 fpform.h
[s S2 `uc 1 `uc 1 `uc 1 `uc 1 ]
[n S2 . a b c d ]
"26
[s S3 `i 1 `i 1 ]
[n S3 . wordA wordB ]
"20
[u S1 `l 1 `d 1 `S2 1 `S3 1 ]
[n S1 . i f fAsBytes fAsWords ]
"34
[s S5 `uc 1 `uc 1 ]
[n S5 . a b ]
"31
[u S4 `i 1 `ui 1 `S5 1 ]
[n S4 . i n nAsBytes ]
"84
[v __Umul8_16 `(ui ~T0 @X0 0 ef2`uc`uc ]
[; ;stdint.h: 13: typedef signed char int8_t;
[; ;stdint.h: 20: typedef signed int int16_t;
[; ;stdint.h: 28: typedef signed short long int int24_t;
[; ;stdint.h: 36: typedef signed long int int32_t;
[; ;stdint.h: 43: typedef unsigned char uint8_t;
[; ;stdint.h: 49: typedef unsigned int uint16_t;
[; ;stdint.h: 56: typedef unsigned short long int uint24_t;
[; ;stdint.h: 63: typedef unsigned long int uint32_t;
[; ;stdint.h: 71: typedef signed char int_least8_t;
[; ;stdint.h: 78: typedef signed int int_least16_t;
[; ;stdint.h: 90: typedef signed short long int int_least24_t;
[; ;stdint.h: 98: typedef signed long int int_least32_t;
[; ;stdint.h: 105: typedef unsigned char uint_least8_t;
[; ;stdint.h: 111: typedef unsigned int uint_least16_t;
[; ;stdint.h: 121: typedef unsigned short long int uint_least24_t;
[; ;stdint.h: 128: typedef unsigned long int uint_least32_t;
[; ;stdint.h: 137: typedef signed char int_fast8_t;
[; ;stdint.h: 144: typedef signed int int_fast16_t;
[; ;stdint.h: 156: typedef signed short long int int_fast24_t;
[; ;stdint.h: 164: typedef signed long int int_fast32_t;
[; ;stdint.h: 171: typedef unsigned char uint_fast8_t;
[; ;stdint.h: 177: typedef unsigned int uint_fast16_t;
[; ;stdint.h: 187: typedef unsigned short long int uint_fast24_t;
[; ;stdint.h: 194: typedef unsigned long int uint_fast32_t;
[; ;stdint.h: 200: typedef int32_t intmax_t;
[; ;stdint.h: 205: typedef uint32_t uintmax_t;
[; ;stdint.h: 210: typedef int16_t intptr_t;
[; ;stdint.h: 215: typedef uint16_t uintptr_t;
[; ;fpform.h: 20: typedef union {
[; ;fpform.h: 21: int32_t i;
[; ;fpform.h: 22: double f;
[; ;fpform.h: 23: struct {
[; ;fpform.h: 24: unsigned char a, b, c, d;
[; ;fpform.h: 25: } fAsBytes;
[; ;fpform.h: 26: struct {
[; ;fpform.h: 27: int16_t wordA, wordB;
[; ;fpform.h: 28: } fAsWords;
[; ;fpform.h: 29: } SFP;
[; ;fpform.h: 31: typedef union {
[; ;fpform.h: 32: int16_t i;
[; ;fpform.h: 33: uint16_t n;
[; ;fpform.h: 34: struct {
[; ;fpform.h: 35: unsigned char a, b;
[; ;fpform.h: 36: } nAsBytes;
[; ;fpform.h: 37: } wordProduct;
[; ;fpform.h: 77: extern double __fladd(double x, double y);
[; ;fpform.h: 78: extern double __flsub(double x, double y);
[; ;fpform.h: 79: extern double __flmul(double x, double y);
[; ;fpform.h: 80: extern double __fldiv(double x, double y);
[; ;fpform.h: 81: extern int spcmp(double x, double y);
[; ;fpform.h: 82: extern double sqrt(double x);
[; ;fpform.h: 84: extern unsigned int _Umul8_16(unsigned char multiplier, unsigned char multiplicand);
"8 sprmul.c
[v ___flmul `(d ~T0 @X0 1 ef2`d`d ]
{
[; ;sprmul.c: 7: double
[; ;sprmul.c: 8: __flmul(double b, double a) {
[e :U ___flmul ]
[v _b `d ~T0 @X0 1 r1 ]
[v _a `d ~T0 @X0 1 r2 ]
[f ]
"9
[v _sign `uc ~T0 @X0 1 a ]
"10
[v _bexp `uc ~T0 @X0 1 a ]
"11
[v _aexp `uc ~T0 @X0 1 a ]
"12
[v _grs `ul ~T0 @X0 1 a ]
"13
[v _prod `S1 ~T0 @X0 1 a ]
"14
[v _temp `S4 ~T0 @X0 1 a ]
[; ;sprmul.c: 9: unsigned char sign;
[; ;sprmul.c: 10: unsigned char bexp;
[; ;sprmul.c: 11: unsigned char aexp;
[; ;sprmul.c: 12: uint32_t grs;
[; ;sprmul.c: 13: SFP prod;
[; ;sprmul.c: 14: wordProduct temp;
[; ;sprmul.c: 17: sign = (*(SFP *) & b).fAsBytes.d & 0x80;
"17
[e = _sign -> & -> . . *U -> &U _b `*S1 2 3 `i -> 128 `i `uc ]
[; ;sprmul.c: 18: bexp = ((*(SFP *) & b).fAsBytes.d) << 1;
"18
[e = _bexp -> << -> . . *U -> &U _b `*S1 2 3 `i -> 1 `i `uc ]
[; ;sprmul.c: 19: if ((*(SFP *) & b).fAsBytes.c & 0x80) {
"19
[e $ ! != & -> . . *U -> &U _b `*S1 2 2 `i -> 128 `i -> 0 `i 7  ]
{
[; ;sprmul.c: 20: bexp |= 0x1;
"20
[e =| _bexp -> -> 1 `i `uc ]
"21
}
[e :U 7 ]
[; ;sprmul.c: 21: }
[; ;sprmul.c: 24: if (bexp) {
"24
[e $ ! != -> _bexp `i -> -> -> 0 `i `uc `i 8  ]
{
[; ;sprmul.c: 26: if (bexp == 0xFF) {
"26
[e $ ! == -> _bexp `i -> 255 `i 9  ]
{
[; ;sprmul.c: 28: b = 0;
"28
[e = _b -> -> 0 `i `d ]
"29
}
[e :U 9 ]
[; ;sprmul.c: 29: }
[; ;sprmul.c: 31: (*(SFP *) & b).i |= (int32_t) 1 << 23;
"31
[e =| . *U -> &U _b `*S1 0 << -> -> 1 `i `l -> 23 `i ]
"33
}
[; ;sprmul.c: 33: }
[e $U 10  ]
"34
[e :U 8 ]
[; ;sprmul.c: 34: else {
{
[; ;sprmul.c: 36: b = 0;
"36
[e = _b -> -> 0 `i `d ]
"37
}
[e :U 10 ]
[; ;sprmul.c: 37: }
[; ;sprmul.c: 39: sign ^= (*(SFP *) & a).fAsBytes.d & 0x80;
"39
[e =^ _sign -> & -> . . *U -> &U _a `*S1 2 3 `i -> 128 `i `uc ]
[; ;sprmul.c: 40: aexp = ((*(SFP *) & a).fAsBytes.d) << 1;
"40
[e = _aexp -> << -> . . *U -> &U _a `*S1 2 3 `i -> 1 `i `uc ]
[; ;sprmul.c: 41: if ((*(SFP *) & a).fAsBytes.c & 0x80) {
"41
[e $ ! != & -> . . *U -> &U _a `*S1 2 2 `i -> 128 `i -> 0 `i 11  ]
{
[; ;sprmul.c: 42: aexp |= 0x1;
"42
[e =| _aexp -> -> 1 `i `uc ]
"43
}
[e :U 11 ]
[; ;sprmul.c: 43: }
[; ;sprmul.c: 45: if (aexp) {
"45
[e $ ! != -> _aexp `i -> -> -> 0 `i `uc `i 12  ]
{
[; ;sprmul.c: 48: if (aexp == 0xFF) {
"48
[e $ ! == -> _aexp `i -> 255 `i 13  ]
{
[; ;sprmul.c: 50: a = 0;
"50
[e = _a -> -> 0 `i `d ]
"51
}
[e :U 13 ]
[; ;sprmul.c: 51: }
[; ;sprmul.c: 53: (*(SFP *) & a).i |= (int32_t) 1 << 23;
"53
[e =| . *U -> &U _a `*S1 0 << -> -> 1 `i `l -> 23 `i ]
"54
}
[; ;sprmul.c: 54: }
[e $U 14  ]
"55
[e :U 12 ]
[; ;sprmul.c: 55: else {
{
[; ;sprmul.c: 57: a = 0;
"57
[e = _a -> -> 0 `i `d ]
"58
}
[e :U 14 ]
[; ;sprmul.c: 58: }
[; ;sprmul.c: 65: if (aexp == 0 || bexp == 0) {
"65
[e $ ! || == -> _aexp `i -> 0 `i == -> _bexp `i -> 0 `i 15  ]
{
[; ;sprmul.c: 66: return 0.0;
"66
[e ) .0.0 ]
[e $UE 6  ]
"67
}
[e :U 15 ]
[; ;sprmul.c: 67: }
[; ;sprmul.c: 119: temp.n = _Umul8_16((*(((unsigned char *)(&a))+2)), (*(unsigned char *)(&b)));
"119
[e = . _temp 1 ( __Umul8_16 (2 , *U + -> &U _a `*uc * -> -> 2 `i `x -> -> # *U -> &U _a `*uc `i `x *U -> &U _b `*uc ]
[; ;sprmul.c: 120: grs = temp.nAsBytes.a;
"120
[e = _grs -> . . _temp 2 0 `ul ]
[; ;sprmul.c: 121: prod.i = temp.nAsBytes.b;
"121
[e = . _prod 0 -> . . _temp 2 1 `l ]
[; ;sprmul.c: 122: temp.n = _Umul8_16((*(((unsigned char *)(&a))+1)), (*(((unsigned char *)(&b))+1)));
"122
[e = . _temp 1 ( __Umul8_16 (2 , *U + -> &U _a `*uc * -> -> 1 `i `x -> -> # *U -> &U _a `*uc `i `x *U + -> &U _b `*uc * -> -> 1 `i `x -> -> # *U -> &U _b `*uc `i `x ]
[; ;sprmul.c: 123: grs += temp.nAsBytes.a;
"123
[e =+ _grs -> . . _temp 2 0 `ul ]
[; ;sprmul.c: 124: prod.i += temp.nAsBytes.b;
"124
[e =+ . _prod 0 -> . . _temp 2 1 `l ]
[; ;sprmul.c: 125: temp.n = _Umul8_16((*(unsigned char *)(&a)), (*(((unsigned char *)(&b))+2)));
"125
[e = . _temp 1 ( __Umul8_16 (2 , *U -> &U _a `*uc *U + -> &U _b `*uc * -> -> 2 `i `x -> -> # *U -> &U _b `*uc `i `x ]
[; ;sprmul.c: 126: grs += temp.nAsBytes.a;
"126
[e =+ _grs -> . . _temp 2 0 `ul ]
[; ;sprmul.c: 127: prod.i += temp.nAsBytes.b;
"127
[e =+ . _prod 0 -> . . _temp 2 1 `l ]
[; ;sprmul.c: 128: grs <<= 8;
"128
[e =<< _grs -> 8 `i ]
[; ;sprmul.c: 129: temp.n = _Umul8_16((*(unsigned char *)(&a)), (*(((unsigned char *)(&b))+1)));
"129
[e = . _temp 1 ( __Umul8_16 (2 , *U -> &U _a `*uc *U + -> &U _b `*uc * -> -> 1 `i `x -> -> # *U -> &U _b `*uc `i `x ]
[; ;sprmul.c: 130: grs += (unsigned long)temp.n;
"130
[e =+ _grs -> . _temp 1 `ul ]
[; ;sprmul.c: 131: temp.n = _Umul8_16((*(((unsigned char *)(&a))+1)), (*(unsigned char *)(&b)));
"131
[e = . _temp 1 ( __Umul8_16 (2 , *U + -> &U _a `*uc * -> -> 1 `i `x -> -> # *U -> &U _a `*uc `i `x *U -> &U _b `*uc ]
[; ;sprmul.c: 132: grs += (unsigned long)temp.n;
"132
[e =+ _grs -> . _temp 1 `ul ]
[; ;sprmul.c: 133: grs <<= 8;
"133
[e =<< _grs -> 8 `i ]
[; ;sprmul.c: 134: temp.n = _Umul8_16((*(unsigned char *)(&a)), (*(unsigned char *)(&b)));
"134
[e = . _temp 1 ( __Umul8_16 (2 , *U -> &U _a `*uc *U -> &U _b `*uc ]
[; ;sprmul.c: 135: grs += (unsigned long)temp.n;
"135
[e =+ _grs -> . _temp 1 `ul ]
[; ;sprmul.c: 136: temp.n = _Umul8_16((*(((unsigned char *)(&a))+2)), (*(((unsigned char *)(&b))+1)));
"136
[e = . _temp 1 ( __Umul8_16 (2 , *U + -> &U _a `*uc * -> -> 2 `i `x -> -> # *U -> &U _a `*uc `i `x *U + -> &U _b `*uc * -> -> 1 `i `x -> -> # *U -> &U _b `*uc `i `x ]
[; ;sprmul.c: 137: prod.i += (unsigned long)temp.n;
"137
[e =+ . _prod 0 -> -> . _temp 1 `ul `l ]
[; ;sprmul.c: 138: temp.n = _Umul8_16((*(((unsigned char *)(&a))+1)), (*(((unsigned char *)(&b))+2)));
"138
[e = . _temp 1 ( __Umul8_16 (2 , *U + -> &U _a `*uc * -> -> 1 `i `x -> -> # *U -> &U _a `*uc `i `x *U + -> &U _b `*uc * -> -> 2 `i `x -> -> # *U -> &U _b `*uc `i `x ]
[; ;sprmul.c: 139: prod.i += (unsigned long)temp.n;
"139
[e =+ . _prod 0 -> -> . _temp 1 `ul `l ]
[; ;sprmul.c: 140: temp.n = _Umul8_16((*(((unsigned char *)(&a))+2)), (*(((unsigned char *)(&b))+2)));
"140
[e = . _temp 1 ( __Umul8_16 (2 , *U + -> &U _a `*uc * -> -> 2 `i `x -> -> # *U -> &U _a `*uc `i `x *U + -> &U _b `*uc * -> -> 2 `i `x -> -> # *U -> &U _b `*uc `i `x ]
[; ;sprmul.c: 141: prod.i += (((unsigned long)temp.n) << 8);
"141
[e =+ . _prod 0 -> << -> . _temp 1 `ul -> 8 `i `l ]
[; ;sprmul.c: 145: prod.i += (grs >> 24);
"145
[e =+ . _prod 0 -> >> _grs -> 24 `i `l ]
[; ;sprmul.c: 146: grs <<= 8;
"146
[e =<< _grs -> 8 `i ]
[; ;sprmul.c: 149: temp.i = bexp + aexp - 126;
"149
[e = . _temp 0 - + -> _bexp `i -> _aexp `i -> 126 `i ]
[; ;sprmul.c: 152: while (!(prod.i & ((int32_t) 1 << 23))) {
"152
[e $U 16  ]
[e :U 17 ]
{
[; ;sprmul.c: 153: prod.i <<= 1;
"153
[e =<< . _prod 0 -> 1 `i ]
[; ;sprmul.c: 154: if (grs & 0x80000000) {
"154
[e $ ! != & _grs -> -2147483648 `ul -> -> 0 `i `ul 19  ]
{
[; ;sprmul.c: 155: prod.i |= 0x1;
"155
[e =| . _prod 0 -> -> 1 `i `l ]
"156
}
[e :U 19 ]
[; ;sprmul.c: 156: }
[; ;sprmul.c: 157: grs <<= 1;
"157
[e =<< _grs -> 1 `i ]
[; ;sprmul.c: 158: --temp.i;
"158
[e =- . _temp 0 -> 1 `i ]
"159
}
[e :U 16 ]
"152
[e $ ! != & . _prod 0 << -> -> 1 `i `l -> 23 `i -> -> 0 `i `l 17  ]
[e :U 18 ]
[; ;sprmul.c: 159: }
[; ;sprmul.c: 163: aexp = 0;
"163
[e = _aexp -> -> 0 `i `uc ]
[; ;sprmul.c: 164: if (grs & 0x80000000) {
"164
[e $ ! != & _grs -> -2147483648 `ul -> -> 0 `i `ul 20  ]
{
[; ;sprmul.c: 165: if (grs & 0x7FFFFFFF) {
"165
[e $ ! != & _grs -> -> 2147483647 `l `ul -> -> 0 `i `ul 21  ]
{
[; ;sprmul.c: 166: aexp = 1;
"166
[e = _aexp -> -> 1 `i `uc ]
"167
}
[; ;sprmul.c: 167: }
[e $U 22  ]
"168
[e :U 21 ]
[; ;sprmul.c: 168: else {
{
[; ;sprmul.c: 169: if (prod.i & 1) {
"169
[e $ ! != & . _prod 0 -> -> 1 `i `l -> -> 0 `i `l 23  ]
{
[; ;sprmul.c: 170: aexp = 1;
"170
[e = _aexp -> -> 1 `i `uc ]
"171
}
[e :U 23 ]
"172
}
[e :U 22 ]
"173
}
[e :U 20 ]
[; ;sprmul.c: 171: }
[; ;sprmul.c: 172: }
[; ;sprmul.c: 173: }
[; ;sprmul.c: 174: if (aexp) {
"174
[e $ ! != -> _aexp `i -> -> -> 0 `i `uc `i 24  ]
{
[; ;sprmul.c: 175: ++prod.i;
"175
[e =+ . _prod 0 -> -> 1 `i `l ]
[; ;sprmul.c: 176: if (prod.i & ((int32_t) 1 << (23 + 1))) {
"176
[e $ ! != & . _prod 0 << -> -> 1 `i `l + -> 23 `i -> 1 `i -> -> 0 `i `l 25  ]
{
[; ;sprmul.c: 177: prod.i = prod.i >> 1;
"177
[e = . _prod 0 >> . _prod 0 -> 1 `i ]
[; ;sprmul.c: 178: ++temp.i;
"178
[e =+ . _temp 0 -> 1 `i ]
"179
}
[e :U 25 ]
"180
}
[e :U 24 ]
[; ;sprmul.c: 179: }
[; ;sprmul.c: 180: }
[; ;sprmul.c: 183: if (!(temp.i < (((int16_t)1 << 8) - 1))) {
"183
[e $ ! ! < . _temp 0 - << -> 1 `i -> 8 `i -> 1 `i 26  ]
{
[; ;sprmul.c: 184: prod.i = 0x7F800000;
"184
[e = . _prod 0 -> 2139095040 `l ]
"185
}
[; ;sprmul.c: 185: }
[e $U 27  ]
"187
[e :U 26 ]
[; ;sprmul.c: 187: else if (!(0 < temp.i)) {
[e $ ! ! < -> 0 `i . _temp 0 28  ]
{
[; ;sprmul.c: 188: prod.i = 0;
"188
[e = . _prod 0 -> -> 0 `i `l ]
[; ;sprmul.c: 190: sign=0;
"190
[e = _sign -> -> 0 `i `uc ]
"191
}
[; ;sprmul.c: 191: }
[e $U 29  ]
"192
[e :U 28 ]
[; ;sprmul.c: 192: else {
{
[; ;sprmul.c: 194: bexp = temp.i;
"194
[e = _bexp -> . _temp 0 `uc ]
[; ;sprmul.c: 195: prod.i &= (((int32_t)1 << 23) - 1);
"195
[e =& . _prod 0 - << -> -> 1 `i `l -> 23 `i -> -> 1 `i `l ]
[; ;sprmul.c: 196: if (bexp & 0x1) {
"196
[e $ ! != & -> _bexp `i -> 1 `i -> 0 `i 30  ]
{
[; ;sprmul.c: 197: prod.fAsBytes.c |= 0x80;
"197
[e =| . . _prod 2 2 -> -> 128 `i `uc ]
"198
}
[e :U 30 ]
[; ;sprmul.c: 198: }
[; ;sprmul.c: 199: prod.fAsBytes.d = bexp >> 1;
"199
[e = . . _prod 2 3 -> >> -> _bexp `i -> 1 `i `uc ]
"200
}
[e :U 29 ]
[e :U 27 ]
[; ;sprmul.c: 200: }
[; ;sprmul.c: 201: prod.fAsBytes.d |= sign;
"201
[e =| . . _prod 2 3 _sign ]
[; ;sprmul.c: 203: return prod.f;
"203
[e ) . _prod 1 ]
[e $UE 6  ]
[; ;sprmul.c: 205: }
"205
[e :UE 6 ]
}
